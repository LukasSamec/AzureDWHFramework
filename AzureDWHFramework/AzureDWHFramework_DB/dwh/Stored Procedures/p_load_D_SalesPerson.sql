CREATE PROCEDURE dwh.p_load_D_SalesPerson@ETLLogID BIGINT ASDECLARE @ETLTableLoadLogID BIGINTDECLARE @ErrorMessage NVARCHAR(MAX)DECLARE @DateTime DATETIME2DECLARE @InsertedCount INT = 0DECLARE @DeletedCount INT = 0DECLARE @UpdatedCount INT = 0BEGIN TRYEXEC log.p_WriteETLTableLoadLog @ETLLogID = @ETLLogID, @Name = 'dwh.p_load_D_SalesPerson', @TargetSchemaName = 'dwh ', @TargetTableName = 'D_SalesPerson', @Type = 'Stored procedure', @Status = 1, @StatusDescription = 'Running', @NewETLTableLoadLogID = @ETLTableLoadLogID OUTPUTCREATE TABLE #D_SalesPerson ( Change NVARCHAR(255), [SalesPersonCode] int NOT NULL, [SalesQuota] money NULL, [CommissionPct] smallmoney NOT NULL, [Bonus] money NOT NULL,[InsertedETLLogID] BIGINT NOT NULL,[UpdatedETLLogID] BIGINT NOT NULL,[Active] BIT NOT NULL )IF NOT EXISTS (SELECT 1 FROM dwh.D_SalesPerson WHERE SalesPersonID = -1)BEGINSET IDENTITY_INSERT dwh.D_SalesPerson ON;INSERT INTO dwh.D_SalesPerson(SalesPersonID,Bonus,CommissionPct,SalesPersonCode,SalesQuota,InsertedETLLogID,UpdatedETLLogID,Active)VALUES(-1,-1,-1,-1,-1,@ETLLogID,@ETLLogID,1)SET IDENTITY_INSERT dwh.D_SalesPerson OFF;ENDMERGE dwh.D_SalesPerson AS targetUSING(SELECT Bonus, BusinessEntityID, CommissionPct, SalesQuotaFROM stage_onpremisedb.SalesPerson) AS sourceON (target.SalesPersonCode = source.BusinessEntityID)WHEN MATCHED THEN UPDATE SETtarget.SalesQuota = source.SalesQuota,target.CommissionPct = source.CommissionPct,target.Bonus = source.Bonus,target.UpdatedETLLogID = @ETLLogID,target.Active = 1WHEN NOT MATCHED THEN INSERT(SalesPersonCode,SalesQuota,CommissionPct,Bonus,InsertedETLLogID,UpdatedETLLogID,Active)VALUES(source.BusinessEntityID,source.SalesQuota,source.CommissionPct,source.Bonus,@ETLLogID,@ETLLogID,1)WHEN NOT MATCHED BY SOURCE AND target.Active = 1 AND target.SalesPersonID <> -1 THENUPDATE SET target.Active = 0OUTPUT $action,source.BusinessEntityID,source.SalesQuota,source.CommissionPct,source.Bonus,@ETLLogID, @ETLLogID, 1 INTO #D_SalesPerson;SELECT @InsertedCount = COUNT(1) FROM #D_SalesPerson WHERE Change = 'INSERT'SELECT @UpdatedCount = COUNT(1) FROM #D_SalesPerson WHERE Change = 'UPDATE'SELECT @DeletedCount = COUNT(1) FROM #D_SalesPerson WHERE Change = 'DELETE'SELECT @DateTime = GETUTCDATE()EXEC log.p_UpdateETLTableLoadLog @ETLTableLoadLogID, 2, 'Finished', @InsertedCount, @UpdatedCount, @DeletedCountEND TRYBEGIN CATCHSELECT @DateTime = GETUTCDATE()SELECT @ErrorMessage = ERROR_MESSAGE()EXEC log.p_UpdateETLTableLoadLog @ETLTableLoadLogID, 3, 'Failed', @InsertedCount, @UpdatedCount, @DeletedCount, @ErrorMessageEXEC log.p_UpdateETLLog @ETLLogID, 3, 'Failed';THROWEND CATCH