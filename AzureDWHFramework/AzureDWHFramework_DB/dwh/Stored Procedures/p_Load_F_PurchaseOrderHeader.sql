CREATE PROCEDURE dwh.p_Load_F_PurchaseOrderHeader@ETLLogID BIGINT ASDECLARE @ETLTableLoadLogID BIGINTDECLARE @ErrorMessage NVARCHAR(MAX)DECLARE @DateTime DATETIME2DECLARE @InsertedCount INT = 0DECLARE @DeletedCount INT = 0DECLARE @UpdatedCount INT = 0DECLARE @SummaryOfChanges TABLE (ID INT IDENTITY(1,1), Change NVARCHAR(20), Code INT) BEGIN TRYEXEC log.p_WriteETLTableLoadLog @ETLLogID,'dwh.p_load_F_PurchaseOrderHeader', 'dwh ', 'F_PurchaseOrderHeader','Stored procedure', 1, 'Running', @ETLTableLoadLogID OUTPUTINSERT INTO @SummaryOfChanges (Change, Code) VALUES ('DELETE', (SELECT COUNT(*) FROM dwh.F_PurchaseOrderHeader))TRUNCATE TABLE dwh.F_PurchaseOrderHeaderINSERT INTO dwh.F_PurchaseOrderHeader(SalesOrderID,SalesPersonID,SubTotal,TaxAmt,Freight,ShipDateID,OrderDateID,InsertedETLLogID,UpdatedETLLogID,Active)SELECTPurchaseOrderID,ISNULL(dwhEmployeeEmployeeID.EmployeeID, -1),SubTotal,TaxAmt,Freight,ISNULL(dwhDateShipDate.DateID, -1),ISNULL(dwhDateOrderDate.DateID, -1),@ETLLogID,@ETLLogID,1FROM stage_onpremisedb.PurchaseOrderHeader stage_onpremisedbPurchaseOrderHeaderLEFT JOIN dwh.D_Employee dwhEmployeeEmployeeID ON dwhEmployeeEmployeeID.EmployeeCode = stage_onpremisedbPurchaseOrderHeader.EmployeeIDLEFT JOIN dwh.D_Date dwhDateShipDate ON dwhDateShipDate.Code = stage_onpremisedbPurchaseOrderHeader.ShipDateLEFT JOIN dwh.D_Date dwhDateOrderDate ON dwhDateOrderDate.Code = stage_onpremisedbPurchaseOrderHeader.OrderDateINSERT INTO @SummaryOfChanges (Change, Code) VALUES ('INSERT', (SELECT COUNT(*) FROM dwh.F_PurchaseOrderHeader))SELECT @InsertedCount = COUNT(1) FROM @SummaryOfChanges WHERE Change = 'INSERT'SELECT @UpdatedCount = 0SELECT @DeletedCount = COUNT(1) FROM @SummaryOfChanges WHERE Change = 'DELETE'SELECT @DateTime = GETUTCDATE()EXEC log.p_UpdateETLTableLoadLog @ETLTableLoadLogID, 2, 'Finished', @InsertedCount, @UpdatedCount, @DeletedCountEND TRYBEGIN CATCHSELECT @DateTime = GETUTCDATE()SELECT @ErrorMessage = ERROR_MESSAGE()EXEC log.p_UpdateETLTableLoadLog @ETLTableLoadLogID, 3, 'Failed', @InsertedCount, @UpdatedCount, @DeletedCount, @ErrorMessageEXEC log.p_UpdateETLLog @ETLLogID, 3, 'Failed';THROWEND CATCH